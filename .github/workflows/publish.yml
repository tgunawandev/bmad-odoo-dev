name: Publish to NPM

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'
      - 'agents/**'
      - 'tasks/**'
      - 'templates/**'
      - 'checklists/**'
      - 'data/**'
      - 'teams/**'
      - 'bin/**'
      - 'scripts/**'
      - 'config.yaml'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        registry-url: 'https://registry.npmjs.org'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Get package version
      id: package
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Check if version exists on npm
      id: npm_check
      run: |
        VERSION=${{ steps.package.outputs.version }}
        if npm view bmad-odoo-dev@$VERSION version 2>/dev/null; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Version $VERSION already exists on npm"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Version $VERSION does not exist on npm"
        fi

    - name: Run validation
      if: steps.npm_check.outputs.exists == 'false'
      run: npm run validate

    - name: Build package
      if: steps.npm_check.outputs.exists == 'false'
      run: npm run build

    - name: Run tests (if available)
      if: steps.npm_check.outputs.exists == 'false'
      run: |
        if npm run test --if-present; then
          echo "Tests passed"
        else
          echo "No tests found or tests failed, continuing..."
        fi

    - name: Publish to npm
      if: steps.npm_check.outputs.exists == 'false'
      run: npm publish --tag latest
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Verify @latest tag
      if: steps.npm_check.outputs.exists == 'false'
      run: |
        VERSION=${{ steps.package.outputs.version }}
        echo "Verifying @latest tag points to version $VERSION"
        LATEST_VERSION=$(npm view bmad-odoo-dev@latest version)
        if [ "$LATEST_VERSION" = "$VERSION" ]; then
          echo "‚úÖ @latest tag correctly points to $VERSION"
        else
          echo "‚ö†Ô∏è  @latest tag issue: expected $VERSION, got $LATEST_VERSION"
          echo "Manually setting @latest tag..."
          npm dist-tag add bmad-odoo-dev@$VERSION latest
        fi
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.npm_check.outputs.exists == 'false'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package.outputs.version }}
        release_name: Release v${{ steps.package.outputs.version }}
        body: |
          ## BMAD-ODOO-DEV v${{ steps.package.outputs.version }}
          
          ### üöÄ Installation
          ```bash
          npm install bmad-odoo-dev
          npx bmad-odoo install
          ```
          
          ### ü§ñ Agents Available
          - `*odoo-functional-consultant` - Business process analysis
          - `*odoo-technical-architect` - System architecture design
          - `*odoo-developer` - Implementation guidance
          - `*odoo-migration-specialist` - Version migrations
          - `*doodba-devops-expert` - Deployment & infrastructure
          
          ### ‚ö° Slash Commands
          - `*BMadOdooDev create-addon` - Generate new Odoo addon
          - `*BMadOdooDev enhance-existing` - Plan system enhancements
          - `*BMadOdooDev plan-migration` - Structure version upgrades
          - `*BMadOdooDev doodba-deploy` - Deployment planning
          
          See [CHANGELOG.md](./CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false

    - name: Version already published
      if: steps.npm_check.outputs.exists == 'true'
      run: |
        echo "::notice::Version ${{ steps.package.outputs.version }} already exists on npm, skipping publish"